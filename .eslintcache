[{"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\index.js":"1","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\App.js":"2","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\serviceWorker.js":"3","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\app\\store.js":"4","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Chatbox.js":"5","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Sidebar.js":"6","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\firebase.js":"7","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\features\\user\\userLogin.js":"8","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\features\\user\\userSlice.js":"9","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Sidebarchat.js":"10"},{"size":644,"mtime":1626978896697,"results":"11","hashOfConfig":"12"},{"size":2754,"mtime":1626979418627,"results":"13","hashOfConfig":"12"},{"size":5141,"mtime":1626978896697,"results":"14","hashOfConfig":"12"},{"size":656,"mtime":1626978896680,"results":"15","hashOfConfig":"12"},{"size":6000,"mtime":1626985464669,"results":"16","hashOfConfig":"12"},{"size":3309,"mtime":1626985252541,"results":"17","hashOfConfig":"12"},{"size":691,"mtime":1626978896697,"results":"18","hashOfConfig":"12"},{"size":2828,"mtime":1626978896697,"results":"19","hashOfConfig":"12"},{"size":2682,"mtime":1626978896697,"results":"20","hashOfConfig":"12"},{"size":1193,"mtime":1626978896680,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1rwqpog",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\index.js",[],["48","49"],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\App.js",["50","51","52"],"import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Chatbox from \"./Chatbox\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, HashRouter } from \"react-router-dom\";\r\nimport { logout, selectUser, setUsername } from \"./features/user/userSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Login from \"./features/user/userLogin\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n      const user = useSelector(selectUser);\r\n      const dispatch = useDispatch();\r\n\r\n      useEffect(() => {\r\n            auth.onAuthStateChanged((authUser) => {\r\n                  if (authUser) {\r\n                        dispatch(\r\n                              setUsername({\r\n                                    userdetails: authUser.displayName,\r\n                                    photourl: authUser.photoURL,\r\n                                    email: authUser.email,\r\n                              })\r\n                        );\r\n                  } else {\r\n                        dispatch(logout());\r\n                  }\r\n            });\r\n      }, []);\r\n\r\n      return (\r\n            <div className=\"App\">\r\n                  {!user ? (\r\n                        <Login />\r\n                  ) : (\r\n                        <div className=\"app_body\">\r\n                              <Router>\r\n                                    <HashRouter>\r\n                                          {/* <Route path='/home'>\r\n                            <h1>Welcome to home page</h1>\r\n                        </Route> */}\r\n\r\n                                          <Route path=\"/rooms/:id\">\r\n                                                <Sidebar />\r\n                                                <Chatbox />\r\n                                                {/* the Router below is ver necessary to keep\r\n                        because this is what makes the router keep working\r\n                         when we dont have full address with id */}\r\n                                          </Route>\r\n                                          <Route exact path=\"/chatbox\">\r\n                                                <Sidebar />\r\n                                                <Chatbox />\r\n                                          </Route>\r\n                                          <Route exact path=\"/\">\r\n                                                <Sidebar />\r\n                                                <Chatbox />\r\n                                          </Route>\r\n                                    </HashRouter>\r\n                              </Router>\r\n                        </div>\r\n                  )}\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default App;\r\n","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\serviceWorker.js",[],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\app\\store.js",[],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Chatbox.js",["53","54","55","56"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"./Chatbox.css\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport { logout, selectUser } from \"./features/user/userSlice\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\n\r\nfunction Chatbox() {\r\n      const [message, setmessage] = useState(\"\");\r\n      const [roomName, setroomName] = useState([]);\r\n      const [messages_from_store, setmessages_from_store] = useState([]);\r\n      // in back days getting a link of other compoet was a headchae ,\r\n      // but with this we can easliy get a link; the link this is graps\r\n      // is same as the roomId we declared it in App.js at route path of\r\n      // line 28 inside which <sidebar>  and <chatbox>  is defined\r\n\r\n      // here this roomId is same as id in firebase......\r\n      // in App.js it gets roomId from as a Link which in sidebarchat.js\r\n      //  is given as id value\r\n      // you can also print it as a console value and check it\r\n\r\n      const user = useSelector(selectUser);\r\n\r\n      const { id } = useParams();\r\n\r\n      console.log(\"useparam\", id);\r\n\r\n      useEffect(() => {\r\n            if (id) {\r\n                  db.collection(\"rooms\")\r\n                        .doc(id)\r\n                        .onSnapshot((snapshot) => setroomName(snapshot.data()?.personName));\r\n            }\r\n      }, [id]);\r\n\r\n      useEffect(() => {\r\n            // if (id) {\r\n            db.collection(\"rooms\")\r\n                  .doc(id)\r\n                  .collection(\"messages\")\r\n                  .orderBy(\"timestamp\", \"asc\")\r\n                  .onSnapshot((snapshot) => setmessages_from_store(snapshot.docs.map((doc) => doc.data())))\r\n\r\n            // scroll to bottom\r\n\r\n\r\n\r\n            // }\r\n      }, [id]); //the id param here is very\r\n      //important. it must be bear in mind\r\n      // that with the change in id only we want\r\n      //to know that we have chanfed to a different\r\n      // person and now we want to know messaged of\r\n      //different id that is different person\r\n\r\n      const sendMessage = (event) => {\r\n            event.preventDefault();\r\n            if (message !== \"\") {\r\n                  db.collection(\"rooms\").doc(id).collection(\"messages\").add({\r\n                        message: message,\r\n                        name: user,\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                  });\r\n                  setmessage(\"\");\r\n            }\r\n      };\r\n\r\n      const dispatch = useDispatch();\r\n\r\n      const log_out = (e) => {\r\n            e.preventDefault();\r\n            console.log(\"cliecked_logout\");\r\n            dispatch(logout());\r\n            console.log(\"cliecked_logout_after_dispatch\");\r\n      };\r\n\r\n      useEffect(() => {\r\n            var div = document.querySelector(\"#scrollDiv\")\r\n            div.scrollTop = div?.scrollHeight - div?.clientHeight\r\n\r\n      }, [messages_from_store])\r\n\r\n      return (\r\n            <div className=\"chatbox\">\r\n                  <div className=\"chatbox_header\">\r\n                        <div className=\"chatbox_header_avatar\">\r\n                              <Avatar />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"chatbox_header_details\">\r\n                              <h3>{roomName}</h3>\r\n                              <p>Last Seen At...</p>\r\n                        </div>\r\n                        <div className=\"exit_icon\" onClick={log_out}>\r\n                              <div className=\"exit_icon_icon\">\r\n                                    <ExitToAppIcon onClick={log_out} />\r\n                              </div>\r\n                              <p>LogOut</p>\r\n                        </div>\r\n                  </div>\r\n\r\n                  <div id=\"scrollDiv\" className=\"message_scroll\">\r\n                        {messages_from_store.map((a_message) => (\r\n                              <div id=\"\" className=\"chatbox_body\">\r\n                                    <p\r\n                                          className={`chatbox_message_sender ${user === a_message.name && `chatbox_message_receiver`\r\n                                                }`}\r\n                                    >\r\n                                          {\" \"}\r\n                                          <br />\r\n                                          <p className=\"span_name\">{a_message.name}</p>\r\n                                          {a_message.message}\r\n                                          {/* <span className=\"span_time\">\r\n                                                {new Date(messages_from_store.timestamp?.toDate()).toUTCString()}\r\n                                          </span> */}\r\n                                    </p>\r\n                              </div>\r\n                        ))}\r\n                  </div>\r\n\r\n                  <div className=\"chatbox_footer\">\r\n                        <form className=\"chatbox_footer_form\" style={{ fontSize: \"22px\" }}  >\r\n                              <textarea style={{ border: \"none\", outline: \"none\", flex: \"1\" }}\r\n                                    value={message}\r\n                                    onChange={(e) => setmessage(e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Type a message\"\r\n                              />\r\n                              <SendOutlinedIcon fontSize=\"large\" onClick={sendMessage} className=\"form_button\" type=\"submit\" style={{ cursor: \"pointer\" }} />\r\n                        </form>\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Chatbox;\r\n","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Sidebar.js",["57"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Sidebarchat from \"./Sidebarchat\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectEmail, selectPhotourl, selectUser } from \"./features/user/userSlice\";\r\n\r\nfunction Sidebar() {\r\n      const [rooms, setrooms] = useState([]);\r\n\r\n      // var db_store = db.collection('rooms')\r\n\r\n      const user = useSelector(selectUser);\r\n      const useremail = useSelector(selectEmail);\r\n      const userphotourl = useSelector(selectPhotourl);\r\n\r\n      useEffect(() => {\r\n            db.collection(\"rooms\")\r\n                  .orderBy(\"timestamp\", \"desc\")\r\n                  .onSnapshot((snapshot) =>\r\n                        setrooms(\r\n                              snapshot.docs.map((doc) => ({\r\n                                    id: doc.id,\r\n                                    data: doc.data(),\r\n                              }))\r\n                        )\r\n                  );\r\n            console.log(rooms);\r\n      }, []);\r\n\r\n      console.log(rooms);\r\n\r\n      const Add = () => {\r\n            var newRoom = prompt(\"New room name?\");\r\n            if (newRoom) {\r\n                  db.collection(\"rooms\").add({\r\n                        personName: newRoom,\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                  });\r\n            }\r\n      };\r\n\r\n      console.log(\"sidbar page\", user, useremail, userphotourl);\r\n      console.log(\"rooms\", rooms);\r\n      console.log(\"for avatar icon\", user.photourl);\r\n\r\n      return (\r\n\r\n            <div className=\"sidebar\">\r\n                  <div className=\"sidebar_header \">\r\n                        <Avatar src={userphotourl} />\r\n                        <div className=\"sidebar_header_middle\">\r\n                              <h3>{user}</h3>\r\n                              <p>\r\n                                    Signed in as <strong> {useremail}</strong>\r\n                              </p>\r\n                        </div>\r\n                  </div>\r\n\r\n                  <div className=\"sidebar_search\">\r\n                        <SearchIcon />\r\n                        <input className=\"input\" type=\"text\" placeholder=\"Search or start new chat\" />\r\n                  </div>\r\n\r\n                  <div onClick={Add} className=\"new_chat\">\r\n                        <h3 style={{ fontSize: \"14px\" }} >Add New Chat</h3>\r\n                  </div>\r\n                  <div className=\"sidebar_scroll\">\r\n                        <div className=\"sidebar_chat\">\r\n                              {rooms.map((a_room) => (\r\n                                    <div className=\"classRoom\" >\r\n                                          <Sidebarchat id={a_room.id} key={a_room.id} name={a_room.data.personName} />\r\n                                          <p className=\"personNameInSmallGroup\"> {a_room.data.personName}</p>\r\n                                          <hr className=\"hrGroup\" />\r\n                                    </div>\r\n                              ))}\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\firebase.js",[],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\features\\user\\userLogin.js",["58","59","60"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUsername, logout, selectUser } from \"./userSlice\";\r\nimport \"tachyons\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./userLogin.css\";\r\nimport db, { auth, provider } from \"../../firebase\";\r\n\r\nfunction Login() {\r\n      const disptach = useDispatch();\r\n      const [name, setname] = useState([\"\"]);\r\n\r\n      const LogInFunc = (e) => {\r\n            e.preventDefault();\r\n\r\n            auth.signInWithPopup(provider)\r\n                  .then((result_we_get) => {\r\n                        disptach(\r\n                              setUsername({\r\n                                    userdetails: result_we_get.user.displayName,\r\n                                    photourl: result_we_get.user.photoURL,\r\n                                    email: result_we_get.user.email,\r\n                              })\r\n                        );\r\n                  })\r\n                  .catch((error) => alert(error));\r\n            //    console.log(result_we_get.user.username)\r\n            //{disptach(setUsername({userdetails : result_we_get.user.displayName}))}\r\n            setname(\"\");\r\n      };\r\n\r\n      const LogOutFunc = () => {\r\n            disptach(\r\n                  logout({\r\n                        userdetails: null,\r\n                        photourl: null,\r\n                        email: null,\r\n                  })\r\n            );\r\n      };\r\n\r\n      // through this now we can also use the value\r\n      // like printing, comparing it\r\n      const user_by_selector = useSelector(selectUser);\r\n\r\n      return (\r\n            <div>\r\n                  {/* <h2>React and Redux-Login Page</h2> */}\r\n                  {/* {user_by_selector ? <p> {user_by_selector} is logged in</p>: <p>No one logged in</p> } */}\r\n                  <div className=\"buttons\">\r\n                        {/* <input className=\"input-reset ba b--black-20 pa2 mb2 db w-100\"  value={name} onChange={(e) => setname(e.target.value)} placeholder=\"Your Name\" type=\"text\"  /> */}\r\n                        <Button\r\n                              className=\"f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black\"\r\n                              disabled={!name}\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              type=\"submit\"\r\n                              onClick={LogInFunc}\r\n                        >\r\n                              LogMeIn\r\n                        </Button>\r\n                        {/* <Button className=\"f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black\"   variant=\"contained\" color=\"secondary\" onClick={(e) => LogOutFunc()}>LogMeOut</Button> */}\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Login;\r\n","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\features\\user\\userSlice.js",[],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Sidebarchat.js",["61","62"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"./Sidebarchat.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Sidebarchat({ id, name }) {\r\n      // this was initially used to generate random number\r\n      // const [seed_for_avatar, setseed_for_avatar] = useState('')\r\n\r\n      // useEffect(() => {\r\n      //    setseed_for_avatar(Math.random())\r\n      // }, [])\r\n\r\n      console.log(id, name);\r\n      return (\r\n            <Link to={`/rooms/${id}`}>\r\n                  <div className=\"start_chat\">\r\n                        <div className=\"Avatar\">\r\n                              <Avatar\r\n                                    className=\"avatarHover\"\r\n                                    src={`https://avatars.dicebear.com/api/human/${id}.svg`}\r\n                              />\r\n                        </div>\r\n                        <div className=\"start_chat_name_last_message\">\r\n                              <p className=\"Name\">{name}</p>\r\n                              <p>Last Message....</p>\r\n                        </div>\r\n                  </div>\r\n            </Link>\r\n      );\r\n}\r\n\r\nexport default Sidebarchat;\r\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":5,"column":35,"nodeType":"69","messageId":"70","endLine":5,"endColumn":41},{"ruleId":"67","severity":1,"message":"71","line":5,"column":50,"nodeType":"69","messageId":"70","endLine":5,"endColumn":54},{"ruleId":"72","severity":1,"message":"73","line":29,"column":10,"nodeType":"74","endLine":29,"endColumn":12,"suggestions":"75"},{"ruleId":"67","severity":1,"message":"76","line":1,"column":38,"nodeType":"69","messageId":"70","endLine":1,"endColumn":44},{"ruleId":"67","severity":1,"message":"77","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":18},{"ruleId":"67","severity":1,"message":"78","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":16},{"ruleId":"67","severity":1,"message":"79","line":12,"column":8,"nodeType":"69","messageId":"70","endLine":12,"endColumn":16},{"ruleId":"72","severity":1,"message":"80","line":32,"column":10,"nodeType":"74","endLine":32,"endColumn":12,"suggestions":"81"},{"ruleId":"67","severity":1,"message":"82","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":10},{"ruleId":"67","severity":1,"message":"83","line":32,"column":13,"nodeType":"69","messageId":"70","endLine":32,"endColumn":23},{"ruleId":"67","severity":1,"message":"84","line":44,"column":13,"nodeType":"69","messageId":"70","endLine":44,"endColumn":29},{"ruleId":"67","severity":1,"message":"85","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"86","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'useRef' is defined but never used.","'CreateIcon' is defined but never used.","'Button' is defined but never used.","'SendIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'rooms'. Either include it or remove the dependency array.",["90"],"'db' is defined but never used.","'LogOutFunc' is assigned a value but never used.","'user_by_selector' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [dispatch]",{"range":"95","text":"96"},"Update the dependencies array to be: [rooms]",{"range":"97","text":"98"},[1124,1126],"[dispatch]",[1174,1176],"[rooms]"]