[{"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\index.js":"1","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\App.js":"2","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\app\\store.js":"3","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Chatbox.js":"4","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Sidebar.js":"5","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\firebase.js":"6","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\features\\user\\userLogin.js":"7","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\features\\user\\userSlice.js":"8","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Sidebarchat.js":"9","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\serviceWorkerRegistration.js":"10"},{"size":678,"mtime":1628687894770,"results":"11","hashOfConfig":"12"},{"size":3287,"mtime":1627052496905,"results":"13","hashOfConfig":"12"},{"size":656,"mtime":1626978896680,"results":"14","hashOfConfig":"12"},{"size":5811,"mtime":1628688289137,"results":"15","hashOfConfig":"12"},{"size":3537,"mtime":1628688361414,"results":"16","hashOfConfig":"12"},{"size":691,"mtime":1626978896697,"results":"17","hashOfConfig":"12"},{"size":2831,"mtime":1626986749826,"results":"18","hashOfConfig":"12"},{"size":3360,"mtime":1627051307808,"results":"19","hashOfConfig":"12"},{"size":1961,"mtime":1627054775412,"results":"20","hashOfConfig":"12"},{"size":5064,"mtime":499162500000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1rwqpog",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\index.js",[],["47","48"],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\App.js",["49","50","51"],"import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Chatbox from \"./Chatbox\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, HashRouter } from \"react-router-dom\";\r\nimport { logout, selectUser, setUsername } from \"./features/user/userSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Login from \"./features/user/userLogin\";\r\nimport db, { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n      const user = useSelector(selectUser);\r\n      const dispatch = useDispatch();\r\n\r\n      useEffect(() => {\r\n            auth.onAuthStateChanged((authUser) => {\r\n                  if (authUser) {\r\n                        db.collection(\"rooms\").doc(authUser.email).set({\r\n                              personName: authUser.email,\r\n                              timestamp: new Date(),\r\n                              photoURL: authUser.photoURL,\r\n                              uid: authUser.uid\r\n                        }, { merge: true }).then().catch(error => {\r\n                              console.log(\"Error in setting user, \", error);\r\n                        })\r\n\r\n                        dispatch(\r\n                              setUsername({\r\n                                    userdetails: authUser.displayName,\r\n                                    photourl: authUser.photoURL,\r\n                                    email: authUser.email,\r\n                                    uid: authUser.uid,\r\n                              })\r\n                        );\r\n                  } else {\r\n                        dispatch(logout());\r\n                  }\r\n            });\r\n      }, []);\r\n\r\n      return (\r\n            <div className=\"App\">\r\n                  {!user ? (\r\n                        <Login />\r\n                  ) : (\r\n                        <div className=\"app_body\">\r\n                              <Router>\r\n                                    <HashRouter>\r\n                                          {/* <Route path='/home'>\r\n                            <h1>Welcome to home page</h1>\r\n                        </Route> */}\r\n\r\n                                          <Route path=\"/rooms/:id\">\r\n                                                <Sidebar />\r\n                                                <Chatbox />\r\n                                                {/* the Router below is ver necessary to keep\r\n                        because this is what makes the router keep working\r\n                         when we dont have full address with id */}\r\n                                          </Route>\r\n                                          <Route exact path=\"/chatbox\">\r\n                                                <Sidebar />\r\n                                                <Chatbox />\r\n                                          </Route>\r\n                                          <Route exact path=\"/\">\r\n                                                <Sidebar />\r\n                                                <Chatbox />\r\n                                          </Route>\r\n                                    </HashRouter>\r\n                              </Router>\r\n                        </div>\r\n                  )}\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default App;\r\n","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\app\\store.js",[],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Chatbox.js",["52","53","54","55","56","57","58","59","60","61"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport { logout, selectChatWithPersonEmail, selectChatWithPersonPhotoUrl, selectEmail, selectUid, selectUser, userWithWhomToChat } from \"./features/user/userSlice\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\n\r\nimport \"./Chatbox.css\";\r\n\r\nfunction Chatbox() {\r\n      const [message, setmessage] = useState(\"\");\r\n      const [roomName, setroomName] = useState([]);\r\n      const [photoURLForHeader, setPhotoURLForHeader] = useState(\"\")\r\n      const [messages_from_store, setmessages_from_store] = useState([]);\r\n      const userEmail = useSelector(selectEmail);\r\n      const uid = useSelector(selectUid)\r\n      const email = useSelector(selectChatWithPersonEmail)\r\n      const photoURl = useSelector(selectChatWithPersonPhotoUrl)\r\n      const { id } = useParams();\r\n      const history = useHistory()\r\n      const dispatch = useDispatch()\r\n      useEffect(() => {\r\n            setPhotoURLForHeader(photoURl)\r\n            setroomName(email)\r\n      }, [id, email]);\r\n\r\n      const [state, setState] = useState(false)\r\n\r\n      const [test, setTest] = useState([])\r\n      useEffect(() => {\r\n            const list = []\r\n            db.collection(\"messages\").doc(id).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot((doc) => {\r\n                  console.log(\"Current data: \", doc.docs);\r\n                  setmessages_from_store(doc.docs.map(dat => dat.data()))\r\n            });\r\n\r\n\r\n      }, [id]);\r\n\r\n      console.log(\"msgs\", test);\r\n\r\n      const sendMessage = (event) => {\r\n            event.preventDefault();\r\n            if (message !== \"\") {\r\n                  db.collection(\"messages\").doc(id).collection(\"messages\").add({\r\n                        message: message,\r\n                        name: userEmail,\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                  }, { merge: true })\r\n                        .then(nothing => {\r\n                              setmessage(\"\");\r\n                              setState(!state)\r\n                        })\r\n                        .catch(error => console.log(error))\r\n            }\r\n      };\r\n\r\n      const log_out = (e) => {\r\n            e.preventDefault();\r\n            dispatch(logout());\r\n            firebase.auth().signOut().then(nothning => {\r\n                  history.push(\"/\")\r\n            }).catch(error => {\r\n                  console.log(error);\r\n            })\r\n      };\r\n\r\n      useEffect(() => {\r\n            var div = document.querySelector(\"#scrollDiv\")\r\n            div.scrollTop = div?.scrollHeight - div?.clientHeight\r\n\r\n      }, [messages_from_store])\r\n\r\n      return (\r\n            <div className=\"chatbox\">\r\n                  {\r\n                        roomName ?\r\n                              <div className=\"chatbox_header\">\r\n                                    <div style={{ display: \"flex\", alignItems: 'center' }}>\r\n                                          <div className=\"chatbox_header_avatar\">\r\n                                                <Avatar src={photoURLForHeader} />\r\n\r\n                                          </div>\r\n                                          <div className=\"chatbox_header_details\">\r\n                                                <h3>{roomName}</h3>\r\n                                                <p>Last Seen At...</p>\r\n                                          </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"exit_icon\" style={{ marginRight: \"15px\", cursor: \"pointer\" }} onClick={log_out}>\r\n                                          <div className=\"\">\r\n                                                <ExitToAppIcon onClick={log_out} />\r\n                                          </div>\r\n                                          <p>LogOut</p>\r\n                                    </div>\r\n                              </div> :\r\n                              <div style={{ height: \"10%\" }}>\r\n                              </div>\r\n                  }\r\n\r\n\r\n                  <div id=\"scrollDiv\" className=\"message_scroll\">\r\n                        {messages_from_store.map((a_message) => (\r\n                              <p key={a_message.message} className={`chatbox_message_sender ${userEmail === a_message.name && `chatbox_message_receiver`}`}>\r\n                                    {a_message.message}\r\n                              </p>\r\n                        ))}\r\n                  </div>\r\n\r\n                  <div className=\"chatbox_footer\">\r\n                        <form className=\"chatbox_footer_form\" style={{ fontSize: \"22px\" }}  >\r\n                              <textarea style={{ border: \"none\", outline: \"none\", flex: \"1\" }}\r\n                                    value={message}\r\n                                    onChange={(e) => setmessage(e.target.value)}\r\n                                    type=\"submit\"\r\n                                    placeholder=\"Type a message\"\r\n                                    autoFocus={true}\r\n                              />\r\n                              <SendOutlinedIcon fontSize=\"large\" onClick={sendMessage} className=\"form_button\" type=\"submit\" style={{ cursor: \"pointer\" }} />\r\n                        </form>\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Chatbox;\r\n","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Sidebar.js",[],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\firebase.js",[],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\features\\user\\userLogin.js",["62","63","64"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUsername, logout, selectUser } from \"./userSlice\";\r\nimport \"tachyons\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./userLogin.css\";\r\nimport db, { auth, provider } from \"../../firebase\";\r\n\r\nfunction Login() {\r\n      const disptach = useDispatch();\r\n      const [name, setname] = useState([\"\"]);\r\n\r\n      const LogInFunc = (e) => {\r\n            e.preventDefault();\r\n\r\n            auth.signInWithRedirect(provider)\r\n                  .then((result_we_get) => {\r\n                        disptach(\r\n                              setUsername({\r\n                                    userdetails: result_we_get.user.displayName,\r\n                                    photourl: result_we_get.user.photoURL,\r\n                                    email: result_we_get.user.email,\r\n                              })\r\n                        );\r\n                  })\r\n                  .catch((error) => alert(error));\r\n            //    console.log(result_we_get.user.username)\r\n            //{disptach(setUsername({userdetails : result_we_get.user.displayName}))}\r\n            setname(\"\");\r\n      };\r\n\r\n      const LogOutFunc = () => {\r\n            disptach(\r\n                  logout({\r\n                        userdetails: null,\r\n                        photourl: null,\r\n                        email: null,\r\n                  })\r\n            );\r\n      };\r\n\r\n      // through this now we can also use the value\r\n      // like printing, comparing it\r\n      const user_by_selector = useSelector(selectUser);\r\n\r\n      return (\r\n            <div>\r\n                  {/* <h2>React and Redux-Login Page</h2> */}\r\n                  {/* {user_by_selector ? <p> {user_by_selector} is logged in</p>: <p>No one logged in</p> } */}\r\n                  <div className=\"buttons\">\r\n                        {/* <input className=\"input-reset ba b--black-20 pa2 mb2 db w-100\"  value={name} onChange={(e) => setname(e.target.value)} placeholder=\"Your Name\" type=\"text\"  /> */}\r\n                        <Button\r\n                              className=\"f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black\"\r\n                              disabled={!name}\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              type=\"submit\"\r\n                              onClick={LogInFunc}\r\n                        >\r\n                              LogMeIn\r\n                        </Button>\r\n                        {/* <Button className=\"f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black\"   variant=\"contained\" color=\"secondary\" onClick={(e) => LogOutFunc()}>LogMeOut</Button> */}\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Login;\r\n","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\features\\user\\userSlice.js",[],"D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\Sidebarchat.js",["65","66"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userWithWhomToChat } from \"./features/user/userSlice\"\r\nimport firebase from \"firebase\"\r\nimport \"./Sidebarchat.css\";\r\nfunction Sidebarchat({ id, name, photoURL, uidConcatenation, email }) {\r\n\r\n      const dispatch = useDispatch()\r\n\r\n\r\n      const sendEmailDispacth = () => {\r\n            dispatch(\r\n                  userWithWhomToChat({\r\n                        chatWithPersonEmail: email,\r\n                        chatWithPersonPhotoUrl: photoURL\r\n                  })\r\n            )\r\n      }\r\n\r\n      firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                  dispatch(\r\n                        userWithWhomToChat({\r\n                              chatWithPersonEmail: email,\r\n                              chatWithPersonPhotoUrl: photoURL\r\n                        })\r\n                  )\r\n            }\r\n      })\r\n\r\n\r\n      return (\r\n            <div onClick={sendEmailDispacth}>\r\n                  <Link to={`/rooms/${uidConcatenation}`}>\r\n                        <div className=\"start_chat\">\r\n                              <div className=\"Avatar\">\r\n                                    <Avatar\r\n                                          className=\"avatarHover\"\r\n                                          src={photoURL ? photoURL : `https://avatars.dicebear.com/api/human/${id}.svg`}\r\n                                    />\r\n                              </div>\r\n                              <div className=\"start_chat_name_last_message\">\r\n                                    <p className=\"Name\">{name}</p>\r\n                                    <p>Last Message....</p>\r\n                              </div>\r\n                        </div>\r\n                  </Link>\r\n            </div>\r\n\r\n      );\r\n}\r\n\r\nexport default Sidebarchat;\r\n","D:\\PROGRAMMING\\chatbox june22-2021\\chatbox\\src\\serviceWorkerRegistration.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":5,"column":35,"nodeType":"73","messageId":"74","endLine":5,"endColumn":41},{"ruleId":"71","severity":1,"message":"75","line":5,"column":50,"nodeType":"73","messageId":"74","endLine":5,"endColumn":54},{"ruleId":"76","severity":1,"message":"77","line":39,"column":10,"nodeType":"78","endLine":39,"endColumn":12,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"80","line":1,"column":38,"nodeType":"73","messageId":"74","endLine":1,"endColumn":44},{"ruleId":"71","severity":1,"message":"81","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":18},{"ruleId":"71","severity":1,"message":"82","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":16},{"ruleId":"71","severity":1,"message":"83","line":10,"column":99,"nodeType":"73","messageId":"74","endLine":10,"endColumn":109},{"ruleId":"71","severity":1,"message":"84","line":10,"column":111,"nodeType":"73","messageId":"74","endLine":10,"endColumn":129},{"ruleId":"71","severity":1,"message":"85","line":11,"column":8,"nodeType":"73","messageId":"74","endLine":11,"endColumn":16},{"ruleId":"71","severity":1,"message":"86","line":22,"column":13,"nodeType":"73","messageId":"74","endLine":22,"endColumn":16},{"ruleId":"76","severity":1,"message":"87","line":31,"column":10,"nodeType":"78","endLine":31,"endColumn":21,"suggestions":"88"},{"ruleId":"71","severity":1,"message":"89","line":35,"column":20,"nodeType":"73","messageId":"74","endLine":35,"endColumn":27},{"ruleId":"71","severity":1,"message":"90","line":37,"column":19,"nodeType":"73","messageId":"74","endLine":37,"endColumn":23},{"ruleId":"71","severity":1,"message":"91","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":10},{"ruleId":"71","severity":1,"message":"92","line":32,"column":13,"nodeType":"73","messageId":"74","endLine":32,"endColumn":23},{"ruleId":"71","severity":1,"message":"93","line":44,"column":13,"nodeType":"73","messageId":"74","endLine":44,"endColumn":29},{"ruleId":"71","severity":1,"message":"94","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"95","line":1,"column":28,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'useRef' is defined but never used.","'CreateIcon' is defined but never used.","'Button' is defined but never used.","'selectUser' is defined but never used.","'userWithWhomToChat' is defined but never used.","'SendIcon' is defined but never used.","'uid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'photoURl'. Either include it or remove the dependency array.",["99"],"'setTest' is assigned a value but never used.","'list' is assigned a value but never used.","'db' is defined but never used.","'LogOutFunc' is assigned a value but never used.","'user_by_selector' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [dispatch]",{"range":"104","text":"105"},"Update the dependencies array to be: [id, email, photoURl]",{"range":"106","text":"107"},[1657,1659],"[dispatch]",[1464,1475],"[id, email, photoURl]"]