[{"C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\index.js":"1","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\App.js":"2","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\serviceWorker.js":"3","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\app\\store.js":"4","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\features\\counter\\Counter.js":"5","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\features\\counter\\counterSlice.js":"6","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\Sidebar.js":"7","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\Chatbox.js":"8","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\Sidebarchat.js":"9","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\firebase.js":"10","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\features\\user\\userSlice.js":"11","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\features\\user\\userLogin.js":"12"},{"size":644,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":2734,"mtime":1611402541489,"results":"15","hashOfConfig":"14"},{"size":5141,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":656,"mtime":1609839091528,"results":"17","hashOfConfig":"14"},{"size":1626,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":1551,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2982,"mtime":1611357194794,"results":"21","hashOfConfig":"14"},{"size":5613,"mtime":1611402492203,"results":"22","hashOfConfig":"14"},{"size":1193,"mtime":1611394423998,"results":"23","hashOfConfig":"14"},{"size":691,"mtime":1609925583054,"results":"24","hashOfConfig":"14"},{"size":2682,"mtime":1611402436226,"results":"25","hashOfConfig":"14"},{"size":2828,"mtime":1611402345797,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"akceas",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2hxy9k",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},"C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\index.js",[],["58","59"],"C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\App.js",["60","61"],"import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Chatbox from \"./Chatbox\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { logout, selectUser, setUsername } from \"./features/user/userSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Login from \"./features/user/userLogin\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n      const user = useSelector(selectUser);\r\n      const dispatch = useDispatch();\r\n\r\n      useEffect(() => {\r\n            auth.onAuthStateChanged((authUser) => {\r\n                  if (authUser) {\r\n                        dispatch(\r\n                              setUsername({\r\n                                    userdetails: authUser.displayName,\r\n                                    photourl: authUser.photoURL,\r\n                                    email: authUser.email,\r\n                              })\r\n                        );\r\n                  } else {\r\n                        dispatch(logout());\r\n                  }\r\n            });\r\n      }, []);\r\n\r\n      return (\r\n            <div className=\"App\">\r\n                  {!user ? (\r\n                        <Login />\r\n                  ) : (\r\n                        <div className=\"app_body\">\r\n                              <Router>\r\n                                    <Switch>\r\n                                          {/* <Route path='/home'>\r\n                            <h1>Welcome to home page</h1>\r\n                        </Route> */}\r\n\r\n                                          <Route path=\"/rooms/:id\">\r\n                                                <Sidebar />\r\n                                                <Chatbox />\r\n                                                {/* the Router below is ver necessary to keep\r\n                        because this is what makes the router keep working\r\n                         when we dont have full address with id */}\r\n                                          </Route>\r\n                                          <Route exact path=\"/chatbox\">\r\n                                                <Sidebar />\r\n                                                <Chatbox />\r\n                                          </Route>\r\n                                          <Route exact path=\"/\">\r\n                                                <Sidebar />\r\n                                                <Chatbox />\r\n                                          </Route>\r\n                                    </Switch>\r\n                              </Router>\r\n                        </div>\r\n                  )}\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\serviceWorker.js",[],"C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\app\\store.js",[],"C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\features\\counter\\Counter.js",[],"C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\features\\counter\\counterSlice.js",[],["62","63"],"C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\Sidebar.js",["64","65"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Sidebarchat from \"./Sidebarchat\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectEmail, selectPhotourl, selectUser } from \"./features/user/userSlice\";\r\n\r\nfunction Sidebar() {\r\n      const [rooms, setrooms] = useState([]);\r\n\r\n      // var db_store = db.collection('rooms')\r\n\r\n      const user = useSelector(selectUser);\r\n      const useremail = useSelector(selectEmail);\r\n      const userphotourl = useSelector(selectPhotourl);\r\n\r\n      useEffect(() => {\r\n            db.collection(\"rooms\")\r\n                  .orderBy(\"timestamp\", \"desc\")\r\n                  .onSnapshot((snapshot) =>\r\n                        setrooms(\r\n                              snapshot.docs.map((doc) => ({\r\n                                    id: doc.id,\r\n                                    data: doc.data(),\r\n                              }))\r\n                        )\r\n                  );\r\n            console.log(rooms);\r\n      }, [\"\"]);\r\n\r\n      console.log(rooms);\r\n\r\n      const Add = () => {\r\n            var newRoom = prompt(\"New room name?\");\r\n            if (newRoom) {\r\n                  db.collection(\"rooms\").add({\r\n                        personName: newRoom,\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                  });\r\n            }\r\n      };\r\n\r\n      console.log(\"sidbar page\", user, useremail, userphotourl);\r\n      console.log(\"rooms\", rooms);\r\n      console.log(\"for avatar icon\", user.photourl);\r\n\r\n      return (\r\n            <div className=\"sidebar\">\r\n                  <div className=\"sidebar_header \">\r\n                        <Avatar src={userphotourl} />\r\n                        <div className=\"sidebar_header_middle\">\r\n                              <h3>{user}</h3>\r\n                              <p>\r\n                                    Signed in as <strong> {useremail}</strong>\r\n                              </p>\r\n                        </div>\r\n                  </div>\r\n\r\n                  <div className=\"sidebar_search\">\r\n                        <SearchIcon />\r\n                        <input className=\"input\" type=\"text\" placeholder=\"Search or start new chat\" />\r\n                  </div>\r\n\r\n                  <div onClick={Add} className=\"new_chat\">\r\n                        <h3>Add New Chat</h3>\r\n                  </div>\r\n                  <div className=\"sidebar_scroll\">\r\n                        <div className=\"sidebar_chat\">\r\n                              {rooms.map((a_room) => (\r\n                                    <Sidebarchat id={a_room.id} key={a_room.id} name={a_room.data.personName} />\r\n                              ))}\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\Chatbox.js",["66"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"./Chatbox.css\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport { logout, selectUser } from \"./features/user/userSlice\";\r\n\r\nfunction Chatbox() {\r\n      const [message, setmessage] = useState(\"\");\r\n      const [roomName, setroomName] = useState([]);\r\n      const [messages_from_store, setmessages_from_store] = useState([]);\r\n      // in back days getting a link of other compoet was a headchae ,\r\n      // but with this we can easliy get a link; the link this is graps\r\n      // is same as the roomId we declared it in App.js at route path of\r\n      // line 28 inside which <sidebar>  and <chatbox>  is defined\r\n\r\n      // here this roomId is same as id in firebase......\r\n      // in App.js it gets roomId from as a Link which in sidebarchat.js\r\n      //  is given as id value\r\n      // you can also print it as a console value and check it\r\n\r\n      const user = useSelector(selectUser);\r\n\r\n      const { id } = useParams();\r\n\r\n      console.log(\"useparam\", id);\r\n\r\n      useEffect(() => {\r\n            if (id) {\r\n                  db.collection(\"rooms\")\r\n                        .doc(id)\r\n                        .onSnapshot((snapshot) => setroomName(snapshot.data().personName));\r\n            }\r\n      }, [id]);\r\n\r\n      useEffect(() => {\r\n            // if (id) {\r\n            db.collection(\"rooms\")\r\n                  .doc(id)\r\n                  .collection(\"messages\")\r\n                  .orderBy(\"timestamp\", \"asc\")\r\n                  .onSnapshot((snapshot) => setmessages_from_store(snapshot.docs.map((doc) => doc.data())));\r\n            // }\r\n      }, [id]); //the id param here is very\r\n      //important. it must be bear in mind\r\n      // that with the change in id only we want\r\n      //to know that we have chanfed to a different\r\n      // person and now we want to know messaged of\r\n      //different id that is different person\r\n\r\n      const sendMessage = (event) => {\r\n            event.preventDefault();\r\n            if (message !== \"\") {\r\n                  db.collection(\"rooms\").doc(id).collection(\"messages\").add({\r\n                        message: message,\r\n                        name: user,\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                  });\r\n                  setmessage(\"\");\r\n            }\r\n      };\r\n\r\n      const dispatch = useDispatch();\r\n\r\n      const log_out = (e) => {\r\n            e.preventDefault();\r\n            console.log(\"cliecked_logout\");\r\n            dispatch(logout());\r\n            console.log(\"cliecked_logout_after_dispatch\");\r\n      };\r\n\r\n      console.log(roomName);\r\n\r\n      return (\r\n            <div className=\"chatbox\">\r\n                  <div className=\"chatbox_header\">\r\n                        <div className=\"chatbox_header_avatar\">\r\n                              <Avatar />\r\n                        </div>\r\n\r\n                        <div className=\"chatbox_header_details\">\r\n                              <h3>{roomName}</h3>\r\n                              <p>Last Seen At...</p>\r\n                        </div>\r\n                        <div className=\"exit_icon\" onClick={log_out}>\r\n                              <div className=\"exit_icon_icon\">\r\n                                    <ExitToAppIcon onClick={log_out} />\r\n                              </div>\r\n                              <p>LogOut</p>\r\n                        </div>\r\n                  </div>\r\n\r\n                  <div id=\"\" className=\"message_scroll\">\r\n                        {messages_from_store.map((a_message) => (\r\n                              <div id=\"\" className=\"chatbox_body\">\r\n                                    <p\r\n                                          className={`chatbox_message_sender ${\r\n                                                user === a_message.name && `chatbox_message_receiver`\r\n                                          }`}\r\n                                    >\r\n                                          {\" \"}\r\n                                          <br />\r\n                                          <p className=\"span_name\">{a_message.name}</p>\r\n                                          {a_message.message}\r\n                                          {/* <span className=\"span_time\">\r\n                                                {new Date(messages_from_store.timestamp?.toDate()).toUTCString()}\r\n                                          </span> */}\r\n                                    </p>\r\n                              </div>\r\n                        ))}\r\n                  </div>\r\n\r\n                  <div className=\"chatbox_footer\">\r\n                        <form onClick={sendMessage} className=\"chatbox_footer_form\">\r\n                              <CreateIcon />\r\n                              <input\r\n                                    value={message}\r\n                                    onChange={(e) => setmessage(e.target.value)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Type a message\"\r\n                              />\r\n                              <button className=\"form_button\" type=\"submit\" />\r\n                        </form>\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Chatbox;\r\n","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\Sidebarchat.js",["67","68"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"./Sidebarchat.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Sidebarchat({ id, name }) {\r\n      // this was initially used to generate random number\r\n      // const [seed_for_avatar, setseed_for_avatar] = useState('')\r\n\r\n      // useEffect(() => {\r\n      //    setseed_for_avatar(Math.random())\r\n      // }, [])\r\n\r\n      console.log(id, name);\r\n      return (\r\n            <Link to={`/rooms/${id}`}>\r\n                  <div className=\"start_chat\">\r\n                        <div className=\"Avatar\">\r\n                              <Avatar\r\n                                    className=\"avatarHover\"\r\n                                    src={`https://avatars.dicebear.com/api/human/${id}.svg`}\r\n                              />\r\n                        </div>\r\n                        <div className=\"start_chat_name_last_message\">\r\n                              <p className=\"Name\">{name}</p>\r\n                              <p>Last Message....</p>\r\n                        </div>\r\n                  </div>\r\n            </Link>\r\n      );\r\n}\r\n\r\nexport default Sidebarchat;\r\n","C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\firebase.js",[],"C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\features\\user\\userSlice.js",[],"C:\\Users\\ujjwal\\Desktop\\programming\\react\\learned-from-clever-programmer\\whatsapp-clone-stajan5\\src\\features\\user\\userLogin.js",["69","70","71"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUsername, logout, selectUser } from \"./userSlice\";\r\nimport \"tachyons\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./userLogin.css\";\r\nimport db, { auth, provider } from \"../../firebase\";\r\n\r\nfunction Login() {\r\n      const disptach = useDispatch();\r\n      const [name, setname] = useState([\"\"]);\r\n\r\n      const LogInFunc = (e) => {\r\n            e.preventDefault();\r\n\r\n            auth.signInWithPopup(provider)\r\n                  .then((result_we_get) => {\r\n                        disptach(\r\n                              setUsername({\r\n                                    userdetails: result_we_get.user.displayName,\r\n                                    photourl: result_we_get.user.photoURL,\r\n                                    email: result_we_get.user.email,\r\n                              })\r\n                        );\r\n                  })\r\n                  .catch((error) => alert(error));\r\n            //    console.log(result_we_get.user.username)\r\n            //{disptach(setUsername({userdetails : result_we_get.user.displayName}))}\r\n            setname(\"\");\r\n      };\r\n\r\n      const LogOutFunc = () => {\r\n            disptach(\r\n                  logout({\r\n                        userdetails: null,\r\n                        photourl: null,\r\n                        email: null,\r\n                  })\r\n            );\r\n      };\r\n\r\n      // through this now we can also use the value\r\n      // like printing, comparing it\r\n      const user_by_selector = useSelector(selectUser);\r\n\r\n      return (\r\n            <div>\r\n                  {/* <h2>React and Redux-Login Page</h2> */}\r\n                  {/* {user_by_selector ? <p> {user_by_selector} is logged in</p>: <p>No one logged in</p> } */}\r\n                  <div className=\"buttons\">\r\n                        {/* <input className=\"input-reset ba b--black-20 pa2 mb2 db w-100\"  value={name} onChange={(e) => setname(e.target.value)} placeholder=\"Your Name\" type=\"text\"  /> */}\r\n                        <Button\r\n                              className=\"f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black\"\r\n                              disabled={!name}\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              type=\"submit\"\r\n                              onClick={LogInFunc}\r\n                        >\r\n                              LogMeIn\r\n                        </Button>\r\n                        {/* <Button className=\"f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black\"   variant=\"contained\" color=\"secondary\" onClick={(e) => LogOutFunc()}>LogMeOut</Button> */}\r\n                  </div>\r\n            </div>\r\n      );\r\n}\r\n\r\nexport default Login;\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":50,"nodeType":"78","messageId":"79","endLine":5,"endColumn":54},{"ruleId":"80","severity":1,"message":"81","line":29,"column":10,"nodeType":"82","endLine":29,"endColumn":12,"suggestions":"83"},{"ruleId":"72","replacedBy":"84"},{"ruleId":"74","replacedBy":"85"},{"ruleId":"80","severity":1,"message":"86","line":32,"column":10,"nodeType":"82","endLine":32,"endColumn":14,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"88","line":32,"column":11,"nodeType":"89","endLine":32,"endColumn":13},{"ruleId":"76","severity":1,"message":"90","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":16},{"ruleId":"76","severity":1,"message":"91","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"92","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"93","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":10},{"ruleId":"76","severity":1,"message":"94","line":32,"column":13,"nodeType":"78","messageId":"79","endLine":32,"endColumn":23},{"ruleId":"76","severity":1,"message":"95","line":44,"column":13,"nodeType":"78","messageId":"79","endLine":44,"endColumn":29},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["98"],["96"],["97"],"React Hook useEffect has a missing dependency: 'rooms'. Either include it or remove the dependency array.",["99"],"The \"\" literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'Button' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'db' is defined but never used.","'LogOutFunc' is assigned a value but never used.","'user_by_selector' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [dispatch]",{"range":"104","text":"105"},"Update the dependencies array to be: [rooms]",{"range":"106","text":"107"},[1112,1114],"[dispatch]",[1174,1178],"[rooms]"]